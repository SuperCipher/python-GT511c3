{"version":3,"sources":["src/chrome/chromeUtils.ts"],"names":[],"mappings":"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","file":"chromeUtils.js","sourcesContent":["/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\n\nimport * as url from 'url';\nimport * as path from 'path';\nimport Crdp from '../../crdp/crdp';\n\nimport * as utils from '../utils';\nimport {ITarget} from './chromeConnection';\n\nexport function targetUrlToClientPathByPathMappings(scriptUrl: string, pathMapping: any): string {\n    const parsedUrl = url.parse(scriptUrl);\n    if (!parsedUrl.protocol || parsedUrl.protocol.startsWith('file') || !parsedUrl.pathname) {\n        // Skip file: URLs and paths, and invalid things\n        return '';\n    }\n\n    const urlWithoutQuery = parsedUrl.protocol + \"//\" + parsedUrl.host + parsedUrl.pathname;\n    const mappingKeys = Object.keys(pathMapping)\n        .sort((a, b) => b.length - a.length);\n    for (let pattern of mappingKeys) {\n        // empty pattern match nothing use / to match root\n        if (pattern) {\n            const localPath = pathMapping[pattern];\n            const parsedPattern = url.parse(pattern);\n\n            if (parsedPattern.protocol) {\n                // pattern is an url with protocol\n                if (urlWithoutQuery.startsWith(pattern)) {\n                    const clientPath = toClientPath(localPath, parsedUrl.pathname, pattern);\n                    if (clientPath) {\n                        return clientPath;\n                    }\n                }\n            } else if (pattern[0] === \"/\") {\n                // pattern is absolute\n                if (parsedUrl.pathname.startsWith(pattern)) {\n                    const clientPath = toClientPath(localPath, parsedUrl.pathname, pattern);\n                    if (clientPath) {\n                        return clientPath;\n                    }\n                }\n            } else {\n                // pattern is relative\n                // avoid matching whole segment\n                pattern = \"/\" + pattern;\n                const indexOf = parsedUrl.pathname.indexOf(pattern);\n                if (indexOf !== -1) {\n                    const clientPath = toClientPath(localPath, parsedUrl.pathname.substring(indexOf), pattern);\n                    if (clientPath) {\n                        return clientPath;\n                    }\n                }\n            }\n        }\n    }\n    return '';\n}\n\nfunction toClientPath(localPath: string, source: string, pattern: string): string {\n    if (source.length === pattern.length) {\n        return localPath;\n    } else {\n        // Verify that matching whole segment of the pattern\n        if (source[pattern.length - 1] === \"/\"\n            || source[pattern.length] === \"/\") {\n            const r = decodeURIComponent(source.substring(pattern.length));\n            return path.join(localPath, r);\n        }\n    }\n    return '';\n}\n\n/**\n * Maps a url from target to an absolute local path.\n * If not given an absolute path (with file: prefix), searches the current working directory for a matching file.\n * http://localhost/scripts/code.js => d:/app/scripts/code.js\n * file:///d:/scripts/code.js => d:/scripts/code.js\n */\nexport function targetUrlToClientPath(webRoot: string, aUrl: string): string {\n    if (!aUrl) {\n        return '';\n    }\n\n    // If the url is an absolute path to a file that exists, return it without file:///.\n    // A remote absolute url (cordova) will still need the logic below.\n    const canonicalUrl = utils.canonicalizeUrl(aUrl);\n    if (aUrl.startsWith('file:///') && utils.existsSync(canonicalUrl)) {\n        return canonicalUrl;\n    }\n\n    // If we don't have the client workingDirectory for some reason, don't try to map the url to a client path\n    if (!webRoot) {\n        return '';\n    }\n\n    // Search the filesystem under the webRoot for the file that best matches the given url\n    let pathName = decodeURIComponent(url.parse(canonicalUrl).pathname);\n    if (!pathName || pathName === '/') {\n        return '';\n    }\n\n    // Dealing with the path portion of either a url or an absolute path to remote file.\n    // Need to force path.sep separator\n    pathName = pathName.replace(/\\//g, path.sep);\n    const pathParts = pathName.split(path.sep);\n    while (pathParts.length > 0) {\n        const clientPath = path.join(webRoot, pathParts.join(path.sep));\n        if (utils.existsSync(clientPath)) {\n            return utils.canonicalizeUrl(clientPath);\n        }\n\n        pathParts.shift();\n    }\n\n    return '';\n}\n\n/**\n * Convert a RemoteObject to a value+variableHandleRef for the client.\n * TODO - Delete after Microsoft/vscode#12019!!\n */\nexport function remoteObjectToValue(object: Crdp.Runtime.RemoteObject, stringify = true): { value: string, variableHandleRef?: string } {\n    let value = '';\n    let variableHandleRef: string;\n\n    if (object) {\n        if (object.type === 'object') {\n            if (object.subtype === 'null') {\n                value = 'null';\n            } else {\n                // If it's a non-null object, create a variable reference so the client can ask for its props\n                variableHandleRef = object.objectId;\n                value = object.description;\n            }\n        } else if (object.type === 'undefined') {\n            value = 'undefined';\n        } else if (object.type === 'function') {\n            const firstBraceIdx = object.description.indexOf('{');\n            if (firstBraceIdx >= 0) {\n                value = object.description.substring(0, firstBraceIdx) + '{ … }';\n            } else {\n                const firstArrowIdx = object.description.indexOf('=>');\n                value = firstArrowIdx >= 0 ?\n                    object.description.substring(0, firstArrowIdx + 2) + ' …' :\n                    object.description;\n            }\n        } else {\n            // The value is a primitive value, or something that has a description (not object, primitive, or undefined). And force to be string\n            if (typeof object.value === 'undefined') {\n                value = object.description;\n            } else if (object.type === 'number') {\n                // .value is truncated, so use .description, the full string representation\n                // Should be like '3' or 'Infinity'.\n                value = object.description;\n            } else {\n                value = stringify ? JSON.stringify(object.value) : object.value;\n            }\n        }\n    }\n\n    return { value, variableHandleRef };\n}\n\n/**\n * Returns the targets from the given list that match the targetUrl, which may have * wildcards.\n * Ignores the protocol and is case-insensitive.\n */\nexport function getMatchingTargets(targets: ITarget[], targetUrlPattern: string): ITarget[] {\n    const standardizeMatch = (aUrl: string) => {\n        // Strip file:///, if present\n        aUrl = utils.fileUrlToPath(aUrl).toLowerCase();\n\n        // Strip the protocol, if present\n        if (aUrl.indexOf('://') >= 0) aUrl = aUrl.split('://')[1];\n\n        // Remove optional trailing /\n        if (aUrl.endsWith('/')) aUrl = aUrl.substr(0, aUrl.length - 1);\n\n        return aUrl;\n    };\n\n    targetUrlPattern = standardizeMatch(targetUrlPattern);\n    targetUrlPattern = utils.escapeRegExpCharacters(targetUrlPattern).replace(/\\\\\\*/g, '.*');\n\n    const targetUrlRegex = new RegExp('^' + targetUrlPattern + '$', 'g');\n    return targets.filter(target => !!standardizeMatch(target.url).match(targetUrlRegex));\n}\n\nconst PROTO_NAME = '__proto__';\nconst NUM_REGEX = /^[0-9]+$/;\nexport function compareVariableNames(var1: string, var2: string): number {\n    // __proto__ at the end\n    if (var1 === PROTO_NAME) {\n        return 1;\n    } else if (var2 === PROTO_NAME) {\n        return -1;\n    }\n\n    const isNum1 = !!var1.match(NUM_REGEX);\n    const isNum2 = !!var2.match(NUM_REGEX);\n\n    if (isNum1 && !isNum2) {\n        // Numbers after names\n        return 1;\n    } else if (!isNum1 && isNum2) {\n        // Names before numbers\n        return -1;\n    } else if (isNum1 && isNum2) {\n        // Compare numbers as numbers\n        const int1 = parseInt(var1, 10);\n        const int2 = parseInt(var2, 10);\n        return int1 - int2;\n    }\n\n    // Compare strings as strings\n    return var1.localeCompare(var2);\n}\n\nexport function remoteObjectToCallArgument(object: Crdp.Runtime.RemoteObject): Crdp.Runtime.CallArgument {\n    return {\n        objectId: object.objectId,\n        unserializableValue: object.unserializableValue,\n        value: object.value\n    };\n}\n\n/**\n * .exception is not present in Node < 6.6 - TODO this would be part of a generic solution for handling\n * protocol differences in the future.\n * This includes the error message and full stack\n */\nexport function descriptionFromExceptionDetails(exceptionDetails: Crdp.Runtime.ExceptionDetails): string {\n    let description: string;\n    if (exceptionDetails.exception) {\n        // Take exception object description, or if a value was thrown, the value\n        description = exceptionDetails.exception.description ||\n            'Error: ' + exceptionDetails.exception.value;\n    } else {\n        description = exceptionDetails.text;\n    }\n\n    return description || '';\n}\n\n/**\n * Get just the error message from the exception details - the first line without the full stack\n */\nexport function errorMessageFromExceptionDetails(exceptionDetails: Crdp.Runtime.ExceptionDetails): string {\n    let description = descriptionFromExceptionDetails(exceptionDetails);\n    const newlineIdx = description.indexOf('\\n');\n    if (newlineIdx >= 0) {\n        description = description.substr(0, newlineIdx);\n    }\n\n    return description;\n}\n\nexport function getEvaluateName(parentEvaluateName: string, name: string): string {\n    if (!parentEvaluateName) return name;\n\n    let nameAccessor: string;\n    if (/^[a-zA-Z_$][a-zA-Z_$0-9]*$/.test(name)) {\n        nameAccessor = '.' + name;\n    } else if (/^\\d+$/.test(name)) {\n        nameAccessor = `[${name}]`;\n    } else {\n        nameAccessor = `[${JSON.stringify(name)}]`;\n    }\n\n    return parentEvaluateName + nameAccessor;\n}\n\nexport function selectBreakpointLocation(lineNumber: number, columnNumber: number, locations: Crdp.Debugger.BreakLocation[]): Crdp.Debugger.BreakLocation {\n    for (let i = locations.length - 1; i >= 0; i--) {\n        if (locations[i].columnNumber <= columnNumber) {\n            return locations[i];\n        }\n    }\n\n    return locations[0];\n}\n"],"sourceRoot":"../../.."}