{"version":3,"sources":["src/telemetry.ts"],"names":[],"mappings":";AAAA;;4DAE4D;;AAG5D,6DAAgD;AAOhD;IAGI,WAAW,CAAC,IAAY,EAAE,IAAU;QAChC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAClB,MAAM,KAAK,GAAG,IAAI,iCAAW,CAAC,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;YACvD,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC3B,CAAC;IACL,CAAC;IAED,iBAAiB,CAAC,UAAgD;QAC9D,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IACjC,CAAC;CACJ;AAbD,8CAaC;AAED;IACI,WAAW,CAAC,IAAY,EAAE,IAAU;QAChC,QAAQ;IACZ,CAAC;IAED,iBAAiB,CAAC,UAAgD;QAC9D,QAAQ;IACZ,CAAC;CAEJ;AATD,sDASC;AAEY,QAAA,SAAS,GAAG,IAAI,iBAAiB,EAAE,CAAC","file":"telemetry.js","sourcesContent":["/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\n\nimport {DebugProtocol} from 'vscode-debugprotocol';\nimport {OutputEvent} from 'vscode-debugadapter';\n\nexport interface ITelemetryReporter {\n    reportEvent(name: string, data?: any): void;\n    setupEventHandler(_sendEvent: (event: DebugProtocol.Event) => void): void;\n}\n\nexport class TelemetryReporter implements ITelemetryReporter {\n    private _sendEvent: (event: DebugProtocol.Event) => void;\n\n    reportEvent(name: string, data?: any): void {\n        if (this._sendEvent) {\n            const event = new OutputEvent(name, 'telemetry', data);\n            this._sendEvent(event);\n        }\n    }\n\n    setupEventHandler(_sendEvent: (event: DebugProtocol.Event) => void): void {\n        this._sendEvent = _sendEvent;\n    }\n}\n\nexport class NullTelemetryReporter implements ITelemetryReporter {\n    reportEvent(name: string, data?: any): void {\n        // no-op\n    }\n\n    setupEventHandler(_sendEvent: (event: DebugProtocol.Event) => void): void {\n        // no-op\n    }\n\n}\n\nexport const telemetry = new TelemetryReporter();"],"sourceRoot":"../.."}