{"version":3,"sources":["src/utils.ts"],"names":[],"mappings":";AAAA;;4DAE4D;;AAE5D,yBAAyB;AACzB,yBAAyB;AACzB,2BAA2B;AAC3B,6BAA6B;AAC7B,6BAA6B;AAC7B,6DAAoD;AACpD,6BAA6B;AAC7B,+BAA+B;AAM/B;IACI,MAAM,QAAQ,GAAG,EAAE,CAAC,QAAQ,EAAE,CAAC;IAC/B,MAAM,CAAC,QAAQ,KAAK,QAAQ;QACxB,QAAQ,KAAK,OAAO;yBACF,CAAC;AAC3B,CAAC;AALD,kCAKC;AAED;;GAEG;AACH,oBAA2B,IAAY;IACnC,IAAI,CAAC;QACD,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAClB,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,gBAAgB;QAChB,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;AACL,CAAC;AARD,gCAQC;AAED;;GAEG;AACH,qBAA4B,IAAY;IACpC,MAAM,CAAC,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM;QAC/B,IAAI,CAAC;YACD,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,GAAG;gBAChB,OAAO,CAAC,GAAG,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC;YAChC,CAAC,CAAC,CAAC;QACP,CAAC;QAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACT,OAAO,CAAC,KAAK,CAAC,CAAC;QACnB,CAAC;IACL,CAAC,CAAC,CAAC;AACP,CAAC;AAVD,kCAUC;AAED;;GAEG;AACH,qBAA4B,GAAU;IAClC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,QAAe,EAAE,CAAM;QACtC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACpB,MAAM,CAAC,QAAQ,CAAC;IACpB,CAAC,EAAE,EAAE,CAAC,CAAC;AACX,CAAC;AALD,kCAKC;AAED,wBAA+B,CAAgB,EAAE,SAAS,GAAG,IAAI,EAAE,UAAmB;IAClF,EAAE,CAAC,CAAC,UAAU,KAAK,SAAS,CAAC,CAAC,CAAC;QAC3B,UAAU,GAAG,2BAA2B,SAAS,IAAI,CAAC;IAC1D,CAAC;IAED,MAAM,CAAC,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM;QAC/B,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACJ,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QAC5B,CAAC;QAED,UAAU,CAAC;YACP,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACJ,MAAM,CAAC,IAAI,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,OAAO,EAAE,CAAC;YACd,CAAC;QACL,CAAC,EAAE,SAAS,CAAC,CAAC;IAClB,CAAC,CAAC,CAAC;AACP,CAAC;AAlBD,wCAkBC;AAED,oBAA2B,EAAsB,EAAE,SAAiB,EAAE,aAAa,GAAG,CAAC;IACnF,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;IAE7B;QACI,MAAM,CAAC,EAAE,EAAE,CAAC,KAAK,CACb,CAAC;YACG,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,SAAS,GAAG,CAAC,SAAS,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;gBACvD,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YACrE,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACnB,CAAC;QACL,CAAC,CAAC,CAAC;IACX,CAAC;IAED,MAAM,CAAC,eAAe,EAAE,CAAC;AAC7B,CAAC;AAfD,gCAeC;AAED;;;;;;;;GAQG;AACH,yBAAgC,SAAiB;IAC7C,SAAS,GAAG,aAAa,CAAC,SAAS,CAAC,CAAC;IAErC,sBAAsB;IACtB,EAAE,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9B,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACxC,CAAC;IAED,SAAS,GAAG,kBAAkB,CAAC,SAAS,CAAC,CAAC;IAC1C,SAAS,GAAG,wBAAwB,CAAC,SAAS,CAAC,CAAC;IAEhD,MAAM,CAAC,SAAS,CAAC;AACrB,CAAC;AAZD,0CAYC;AAED,mBAA0B,SAAiB;IACvC,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;AAC5C,CAAC;AAFD,8BAEC;AAED;;GAEG;AACH,uBAA8B,SAAiB;IAC3C,EAAE,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QACvB,SAAS,GAAG,SAAS,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;QAC9C,SAAS,GAAG,kBAAkB,CAAC,SAAS,CAAC,CAAC;QAC1C,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACzD,uEAAuE;YACvE,sFAAsF;YACtF,4CAA4C;YAC5C,SAAS,GAAG,GAAG,GAAG,SAAS,CAAC;QAChC,CAAC;QAED,SAAS,GAAG,wBAAwB,CAAC,SAAS,CAAC,CAAC;IACpD,CAAC;IAED,MAAM,CAAC,SAAS,CAAC;AACrB,CAAC;AAfD,sCAeC;AAED;;;GAGG;AACH,6BAAoC,IAAY;IAC5C,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;AACpC,CAAC;AAFD,kDAEC;AAED;;GAEG;AACH,kCAAyC,KAAa,EAAE,oBAAoB,GAAG,KAAK;IAChF,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;QAAC,MAAM,CAAC,KAAK,CAAC;IAEzB,KAAK,GAAG,cAAc,CAAC,KAAK,EAAE,oBAAoB,CAAC,CAAC;IACpD,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC;QACtC,MAAM,SAAS,GAAG,UAAU,CAAC,MAAM,CAAC;QACpC,KAAK;YACD,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,SAAS,GAAG,CAAC,CAAC;gBAC9B,KAAK,CAAC,MAAM,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IACzD,CAAC;IAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QACnC,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IACvC,CAAC;IAED,MAAM,CAAC,KAAK,CAAC;AACjB,CAAC;AAdD,4DAcC;AAED,wBAA+B,KAAa,EAAE,oBAAoB,GAAG,KAAK;IACtE,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;QAAC,MAAM,CAAC,KAAK,CAAC;IAEzB,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC;QACtC,MAAM,SAAS,GAAG,UAAU,CAAC,MAAM,CAAC;QACpC,KAAK;YACD,UAAU;gBACV,KAAK,CAAC,SAAS,CAAC,CAAC,WAAW,EAAE;gBAC9B,KAAK,CAAC,MAAM,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;IACpC,CAAC;IAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QACnC,kGAAkG;QAClG,MAAM,WAAW,GAAG,oBAAoB,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;QAC3F,KAAK,GAAG,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC;IAED,MAAM,CAAC,KAAK,CAAC;AACjB,CAAC;AAhBD,wCAgBC;AAED;;GAEG;AACH,4BAAmC,KAAa;IAC5C,MAAM,CAAC,KAAK;SACP,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;SAClB,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AAC5B,CAAC;AAJD,gDAIC;AAED;;;;GAIG;AACH,cAAqB,GAAiB;IAClC,MAAM,WAAW,GAAG,CAAC,KAAU,KAAqB,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC;IAEpE,IAAI,CAAQ,CAAC;IACb,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACP,CAAC,GAAG,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;IACnC,CAAC;IAAC,IAAI,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAC1B,iCAAiC;QACjC,CAAC,GAAG,GAAG,CAAC;IACZ,CAAC;IAAC,IAAI,CAAC,CAAC;QACJ,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;IACvB,CAAC;IAED,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC;AAdD,oBAcC;AAED;;GAEG;AACH,gBAAuB,IAAY;IAC/B,MAAM,CAAC,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM;QAC/B,MAAM,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAClC,MAAM,GAAG,GAAG,SAAS,CAAC,QAAQ,KAAK,QAAQ,GAAG,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACnE,MAAM,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,kBAAkB,EAAE,KAAK,EAAE,EAAE,SAAS,CAAyB,CAAC;QAEhG,GAAG,CAAC,OAAO,EAAE,QAAQ;YACjB,IAAI,YAAY,GAAG,EAAE,CAAC;YACtB,QAAQ,CAAC,EAAE,CAAC,MAAM,EAAE,KAAK,IAAI,YAAY,IAAI,KAAK,CAAC,CAAC;YACpD,QAAQ,CAAC,EAAE,CAAC,KAAK,EAAE;gBACf,+DAA+D;gBAC/D,EAAE,CAAC,CAAC,QAAQ,CAAC,UAAU,KAAK,GAAG,CAAC,CAAC,CAAC;oBAC9B,OAAO,CAAC,YAAY,CAAC,CAAC;gBAC1B,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,4BAAM,CAAC,GAAG,CAAC,wBAAwB,GAAG,QAAQ,CAAC,UAAU,CAAC,QAAQ,EAAE,GAAG,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,CAAC;oBAChH,MAAM,CAAC,IAAI,KAAK,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;gBAC3C,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;YACZ,4BAAM,CAAC,GAAG,CAAC,mBAAmB,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC/C,MAAM,CAAC,CAAC,CAAC,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACP,CAAC;AAvBD,wBAuBC;AAED;;GAEG;AACH,eAAsB,SAAiB;IACnC,MAAM,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC;AACvF,CAAC;AAFD,sBAEC;AAED;;GAEG;AACH,gBAAuB,CAAS,EAAE,IAAY;IAC1C,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC;QACrB,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC,CAAC;AACV,CAAC;AAJD,wBAIC;AAED;;;;GAIG;AACH,uBAA8B,OAAe;IACzC,OAAO,GAAG,mBAAmB,CAAC,OAAO,CAAC,CAAC;IACvC,OAAO,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,SAAS,GAAG,UAAU,CAAC;QACxD,OAAO,CAAC;IACZ,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;AAC9B,CAAC;AALD,sCAKC;AAED,oBAA2B,IAAY;IACnC,MAAM,CAAC,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM;QAC/B,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,GAAG,EAAE,KAAK;YACxB,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACN,MAAM,CAAC,GAAG,CAAC,CAAC;YAChB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,OAAO,CAAC,KAAK,CAAC,CAAC;YACnB,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACP,CAAC;AAVD,gCAUC;AAED,mBAA0B,IAAY,EAAE,QAAQ,GAAG,MAAM;IACrD,MAAM,CAAC,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM;QAC/B,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,QAAQ,EAAE,CAAC,GAAG,EAAE,YAAY;YAC1C,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACN,MAAM,CAAC,GAAG,CAAC,CAAC;YAChB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,OAAO,CAAC,YAAY,CAAC,CAAC;YAC1B,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACP,CAAC;AAVD,8BAUC;AAED,oBAA2B,QAAgB,EAAE,IAAY;IACrD,MAAM,CAAC,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM;QAC/B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC/B,EAAE,CAAC,SAAS,CAAC,QAAQ,EAAE,IAAI,EAAE,GAAG;YAC5B,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACN,MAAM,CAAC,GAAG,CAAC,CAAC;YAChB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,OAAO,CAAC,IAAI,CAAC,CAAC;YAClB,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACP,CAAC;AAXD,gCAWC;AAED;;GAEG;AACH,gBAAuB,QAAgB;IACnC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC3B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC/B,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IAC3B,CAAC;AACL,CAAC;AALD,wBAKC;AAED,0EAA0E;AAC1E,sBAAgC,UAAa,EAAE,MAAS;IACpD,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC;QACrB,EAAE,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC7B,UAAU,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;QAClC,CAAC;IACL,CAAC;IAED,MAAM,CAAC,UAAU,CAAC;AACtB,CAAC;AARD,oCAQC;AAED,mBAAmB,OAAe;IAC9B,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC;AAC9B,CAAC;AAOD,mBAA0B,QAAkB,EAAE,IAAU;IACpD,MAAM,SAAS,GAAgB,EAAE,CAAC;IAElC,IAAI,GAAG,YAAY,CAAC;QAChB,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;QAC1B,SAAS,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;QAC9B,aAAa,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;QAClC,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;QAC7B,MAAM,EAAE,EAAE;KACb,EAAE,IAAI,CAAC,CAAC;IAET,IAAI,CAAC;QACD,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC;YACxB,EAAE,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBACrB,MAAM,CAAC;YACX,CAAC;YAED,MAAM,MAAM,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,cAAc;gBACjE,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACnC,CAAC,CAAC,CAAC;YAEH,SAAS,CAAC,IAAI,CAAC;gBACX,OAAO;gBACP,IAAI,EAAE,YAAY,CAAC,YAAY,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE;oBACvC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC;iBACrC,CAAC;aACL,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACX,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAC/B,CAAC;IAED,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI;QACjC,MAAM,CAAC,IAAI,OAAO,CAAW,CAAC,CAAC,EAAE,CAAC;YAC9B,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,EAAE,KAAe;gBAC/C,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBACN,CAAC,CAAC,GAAG,CAAC,CAAC;gBACX,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,CAAC,CAAC,KAAK,CAAC,CAAC;gBACb,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO;QACZ,MAAM,GAAG,GAAG,IAAI,GAAG,EAAU,CAAC;QAC9B,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,OAAO,CAAC,CAAC,CAAC;YACxB,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;gBAClB,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACf,CAAC;QACL,CAAC;QAED,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,GAAG,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1D,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC,CAAC,CAAC;AACP,CAAC;AAtDD,8BAsDC;AAED;;GAEG;AACH,oBAA+B,SAAQ,6BAAU;IAAjD;;QACY,gBAAW,GAAG,IAAI,GAAG,EAAa,CAAC;IAyB/C,CAAC;IAvBU,MAAM,CAAC,KAAQ;QAClB,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACnC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QAEpC,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IAEM,MAAM,CAAC,KAAQ;QAClB,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACvC,CAAC;IAEM,OAAO,CAAC,IAA2B;QACtC,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;YACtC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACpD,CAAC;QAED,MAAM,CAAC,SAAS,CAAC;IACrB,CAAC;IAEM,GAAG,CAAC,MAAc,EAAE,KAAQ;QACzB,IAAK,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QAC1C,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IACxC,CAAC;CACJ;AA1BD,wCA0BC;AAED;;GAEG;AACH,qBAA4B,KAAa,EAAE,aAAsB;IAC7D,MAAM,aAAa,GAAG,UAAU,CAAC;IACjC,IAAI,SAAS,GAAG,KAAK,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;IAChD,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;QACZ,+FAA+F;QAC/F,kGAAkG;QAClG,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;IAC/C,CAAC;IAED,KAAK,GAAG,uBAAuB,CAAC,KAAK,CAAC,CAAC;IAEvC,gGAAgG;IAChG,mCAAmC;IACnC,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;QAChB,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAC5B,MAAM,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACpC,MAAM,CAAC,GAAG,WAAW,CAAC,WAAW,EAAE,CAAC;YACpC,MAAM,CAAC,GAAG,WAAW,CAAC,WAAW,EAAE,CAAC;YACpC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC;QAC3C,CAAC;IACL,CAAC;IAAC,IAAI,CAAC,CAAC;QACJ,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,WAAW,EAAE,MAAM,IAAI,IAAI,MAAM,CAAC,WAAW,EAAE,GAAG,MAAM,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;IACrG,CAAC;IAED,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;QACZ,KAAK,GAAG,uBAAuB,CAAC,aAAa,CAAC,GAAG,KAAK,CAAC;IAC3D,CAAC;IAED,MAAM,CAAC,KAAK,CAAC;AACjB,CAAC;AA7BD,kCA6BC;AAED,mCAA0C,IAAY;IAClD,MAAM,CAAC,kCAAkC,CAAC,IAAI,CAAC;SAC1C,OAAO,CAAC,mBAAmB,EAAE,WAAW,CAAC,CAAC,iBAAiB;SAC3D,OAAO,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC,UAAU;SAG1C,OAAO,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC,eAAe;SAC9C,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,aAAa;SAGxC,OAAO,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC,CAAC,yBAAyB;AACrE,CAAC;AAXD,8DAWC;AAED,iCAAiC,GAAW;IACxC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,wBAAwB,EAAE,MAAM,CAAC,CAAC;AACzD,CAAC;AAED;;GAEG;AACH,4CAA4C,GAAW;IACnD,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,uBAAuB,EAAE,MAAM,CAAC,CAAC;AACxD,CAAC;AAED,yBAAgC,GAAW;IACvC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;AACzC,CAAC;AAFD,0CAEC;AAED,0BAAiC,GAAW;IACxC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;AAC3C,CAAC;AAFD,4CAEC;AAED,0CAA0C,KAAa;IACnD,MAAM,CAAC,MAAM,uBAAuB,CAAC,KAAK,CAAC,GAAG,CAAC;AACnD,CAAC;AAED,+BAAsC,KAAa,EAAE,KAAa;IAC9D,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACpB,MAAM,qBAAqB,GAAG,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QAC9D,MAAM,MAAM,GAAG,IAAI,gCAAgC,CAAC,KAAK,CAAC,KAAK,qBAAqB,EAAE,CAAC;QACvF,MAAM,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;IACnC,CAAC;IAAC,IAAI,CAAC,CAAC;QACJ,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;AACL,CAAC;AARD,sDAQC;AAED,4BAAmC,KAAa,EAAE,KAAa;IAC3D,MAAM,eAAe,GAAG,gCAAgC,CAAC,KAAK,CAAC,CAAC;IAChE,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC7C,MAAM,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC;QAC5D,MAAM,CAAC,IAAI,MAAM,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;IACtC,CAAC;IAAC,IAAI,CAAC,CAAC;QACJ,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;AACL,CAAC;AARD,gDAQC;AAED,8BAAqC,GAAW;IAC5C,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAC1D,CAAC;AAFD,oDAEC;AAMD,iBAAwB,GAAW,EAAE,CAAC,GAAG,CAAC;IACtC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC;AAFD,0BAEC;AAED,mBAA0B,GAAW;IACjC,MAAM,CAAC,OAAO,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC;AAC9B,CAAC;AAFD,8BAEC;AAED,kBAAyB,GAAW;IAChC,MAAM,CAAC,OAAO,GAAG,KAAK,QAAQ,CAAC;AACnC,CAAC;AAFD,4BAEC;AAED,gCAAuC,KAAa;IAChD,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,qCAAqC,EAAE,MAAM,CAAC,CAAC;AACxE,CAAC;AAFD,wDAEC","file":"utils.js","sourcesContent":["/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\n\nimport * as os from 'os';\nimport * as fs from 'fs';\nimport * as url from 'url';\nimport * as path from 'path';\nimport * as glob from 'glob';\nimport {Handles, logger} from 'vscode-debugadapter';\nimport * as http from 'http';\nimport * as https from 'https';\n\nexport const enum Platform {\n    Windows, OSX, Linux\n}\n\nexport function getPlatform(): Platform {\n    const platform = os.platform();\n    return platform === 'darwin' ? Platform.OSX :\n        platform === 'win32' ? Platform.Windows :\n            Platform.Linux;\n}\n\n/**\n * Node's fs.existsSync is deprecated, implement it in terms of statSync\n */\nexport function existsSync(path: string): boolean {\n    try {\n        fs.statSync(path);\n        return true;\n    } catch (e) {\n        // doesn't exist\n        return false;\n    }\n}\n\n/**\n * Checks asynchronously if a path exists on the disk.\n */\nexport function existsAsync(path: string): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n        try {\n            fs.access(path, (err) => {\n                resolve(err ? false : true);\n            });\n        } catch (e) {\n            resolve(false);\n        }\n    });\n}\n\n/**\n * Returns a reversed version of arr. Doesn't modify the input.\n */\nexport function reversedArr(arr: any[]): any[] {\n    return arr.reduce((reversed: any[], x: any) => {\n        reversed.unshift(x);\n        return reversed;\n    }, []);\n}\n\nexport function promiseTimeout(p?: Promise<any>, timeoutMs = 1000, timeoutMsg?: string): Promise<any> {\n    if (timeoutMsg === undefined) {\n        timeoutMsg = `Promise timed out after ${timeoutMs}ms`;\n    }\n\n    return new Promise((resolve, reject) => {\n        if (p) {\n            p.then(resolve, reject);\n        }\n\n        setTimeout(() => {\n            if (p) {\n                reject(new Error(timeoutMsg));\n            } else {\n                resolve();\n            }\n        }, timeoutMs);\n    });\n}\n\nexport function retryAsync(fn: () => Promise<any>, timeoutMs: number, intervalDelay = 0): Promise<any> {\n    const startTime = Date.now();\n\n    function tryUntilTimeout(): Promise<any> {\n        return fn().catch(\n            e => {\n                if (Date.now() - startTime < (timeoutMs - intervalDelay)) {\n                    return promiseTimeout(null, intervalDelay).then(tryUntilTimeout);\n                } else {\n                    return errP(e);\n                }\n            });\n    }\n\n    return tryUntilTimeout();\n}\n\n/**\n * Modify a url/path either from the client or the target to a common format for comparing.\n * The client can handle urls in this format too.\n * file:///D:\\\\scripts\\\\code.js => d:/scripts/code.js\n * file:///Users/me/project/code.js => /Users/me/project/code.js\n * c:/scripts/code.js => c:\\\\scripts\\\\code.js\n * http://site.com/scripts/code.js => (no change)\n * http://site.com/ => http://site.com\n */\nexport function canonicalizeUrl(urlOrPath: string): string {\n    urlOrPath = fileUrlToPath(urlOrPath);\n\n    // Remove query params\n    if (urlOrPath.indexOf('?') >= 0) {\n        urlOrPath = urlOrPath.split('?')[0];\n    }\n\n    urlOrPath = stripTrailingSlash(urlOrPath);\n    urlOrPath = fixDriveLetterAndSlashes(urlOrPath);\n\n    return urlOrPath;\n}\n\nexport function isFileUrl(candidate: string): boolean {\n    return candidate.startsWith('file:///');\n}\n\n/**\n * If urlOrPath is a file URL, removes the 'file:///', adjusting for platform differences\n */\nexport function fileUrlToPath(urlOrPath: string): string {\n    if (isFileUrl(urlOrPath)) {\n        urlOrPath = urlOrPath.replace('file:///', '');\n        urlOrPath = decodeURIComponent(urlOrPath);\n        if (urlOrPath[0] !== '/' && !urlOrPath.match(/^[A-Za-z]:/)) {\n            // If it has a : before the first /, assume it's a windows path or url.\n            // Ensure unix-style path starts with /, it can be removed when file:/// was stripped.\n            // Don't add if the url still has a protocol\n            urlOrPath = '/' + urlOrPath;\n        }\n\n        urlOrPath = fixDriveLetterAndSlashes(urlOrPath);\n    }\n\n    return urlOrPath;\n}\n\n/**\n * Replace any backslashes with forward slashes\n * blah\\something => blah/something\n */\nexport function forceForwardSlashes(aUrl: string): string {\n    return aUrl.replace(/\\\\/g, '/');\n}\n\n/**\n * Ensure lower case drive letter and \\ on Windows\n */\nexport function fixDriveLetterAndSlashes(aPath: string, uppercaseDriveLetter = false): string {\n    if (!aPath) return aPath;\n\n    aPath = fixDriveLetter(aPath, uppercaseDriveLetter);\n    if (aPath.match(/file:\\/\\/\\/[A-Za-z]:/)) {\n        const prefixLen = 'file:///'.length;\n        aPath =\n            aPath.substr(0, prefixLen + 1) +\n            aPath.substr(prefixLen + 1).replace(/\\//g, '\\\\');\n    } else if (aPath.match(/^[A-Za-z]:/)) {\n        aPath = aPath.replace(/\\//g, '\\\\');\n    }\n\n    return aPath;\n}\n\nexport function fixDriveLetter(aPath: string, uppercaseDriveLetter = false): string {\n    if (!aPath) return aPath;\n\n    if (aPath.match(/file:\\/\\/\\/[A-Za-z]:/)) {\n        const prefixLen = 'file:///'.length;\n        aPath =\n            'file:///' +\n            aPath[prefixLen].toLowerCase() +\n            aPath.substr(prefixLen + 1);\n    } else if (aPath.match(/^[A-Za-z]:/)) {\n        // If the path starts with a drive letter, ensure lowercase. VS Code uses a lowercase drive letter\n        const driveLetter = uppercaseDriveLetter ? aPath[0].toUpperCase() : aPath[0].toLowerCase();\n        aPath = driveLetter + aPath.substr(1);\n    }\n\n    return aPath;\n}\n\n/**\n * Remove a slash of any flavor from the end of the path\n */\nexport function stripTrailingSlash(aPath: string): string {\n    return aPath\n        .replace(/\\/$/, '')\n        .replace(/\\\\$/, '');\n}\n\n/**\n * A helper for returning a rejected promise with an Error object. Avoids double-wrapping an Error, which could happen\n * when passing on a failure from a Promise error handler.\n * @param msg - Should be either a string or an Error\n */\nexport function errP(msg: string|Error): Promise<never> {\n    const isErrorLike = (thing: any): thing is Error => !!thing.message;\n\n    let e: Error;\n    if (!msg) {\n        e = new Error('Unknown error');\n    } else if (isErrorLike(msg)) {\n        // msg is already an Error object\n        e = msg;\n    } else {\n        e = new Error(msg);\n    }\n\n    return Promise.reject(e);\n}\n\n/**\n * Helper function to GET the contents of a url\n */\nexport function getURL(aUrl: string): Promise<string> {\n    return new Promise((resolve, reject) => {\n        const parsedUrl = url.parse(aUrl);\n        const get = parsedUrl.protocol === 'https:' ? https.get : http.get;\n        const options = Object.assign({ rejectUnauthorized: false }, parsedUrl) as https.RequestOptions;\n\n        get(options, response => {\n            let responseData = '';\n            response.on('data', chunk => responseData += chunk);\n            response.on('end', () => {\n                // Sometimes the 'error' event is not fired. Double check here.\n                if (response.statusCode === 200) {\n                    resolve(responseData);\n                } else {\n                    logger.log('HTTP GET failed with: ' + response.statusCode.toString() + ' ' + response.statusMessage.toString());\n                    reject(new Error(responseData.trim()));\n                }\n            });\n        }).on('error', e => {\n            logger.log('HTTP GET failed: ' + e.toString());\n            reject(e);\n        });\n    });\n}\n\n/**\n * Returns true if urlOrPath is like \"http://localhost\" and not like \"c:/code/file.js\" or \"/code/file.js\"\n */\nexport function isURL(urlOrPath: string): boolean {\n    return urlOrPath && !path.isAbsolute(urlOrPath) && !!url.parse(urlOrPath).protocol;\n}\n\n/**\n * Strip a string from the left side of a string\n */\nexport function lstrip(s: string, lStr: string): string {\n    return s.startsWith(lStr) ?\n        s.substr(lStr.length) :\n        s;\n}\n\n/**\n * Convert a local path to a file URL, like\n * C:/code/app.js => file:///C:/code/app.js\n * /code/app.js => file:///code/app.js\n */\nexport function pathToFileURL(absPath: string): string {\n    absPath = forceForwardSlashes(absPath);\n    absPath = (absPath.startsWith('/') ? 'file://' : 'file:///') +\n        absPath;\n    return encodeURI(absPath);\n}\n\nexport function fsReadDirP(path: string): Promise<string[]> {\n    return new Promise((resolve, reject) => {\n        fs.readdir(path, (err, files) => {\n            if (err) {\n                reject(err);\n            } else {\n                resolve(files);\n            }\n        });\n    });\n}\n\nexport function readFileP(path: string, encoding = 'utf8'): Promise<string> {\n    return new Promise((resolve, reject) => {\n        fs.readFile(path, encoding, (err, fileContents) => {\n            if (err) {\n                reject(err);\n            } else {\n                resolve(fileContents);\n            }\n        });\n    });\n}\n\nexport function writeFileP(filePath: string, data: string): Promise<string> {\n    return new Promise((resolve, reject) => {\n        mkdirs(path.dirname(filePath));\n        fs.writeFile(filePath, data, err => {\n            if (err) {\n                reject(err);\n            } else {\n                resolve(data);\n            }\n        });\n    });\n}\n\n/**\n * Make sure that all directories of the given path exist (like mkdir -p).\n */\nexport function mkdirs(dirsPath: string): void {\n    if (!fs.existsSync(dirsPath)) {\n        mkdirs(path.dirname(dirsPath));\n        fs.mkdirSync(dirsPath);\n    }\n}\n\n// ---- globbing support -------------------------------------------------\nexport function extendObject<T>(objectCopy: T, object: T): T {\n    for (let key in object) {\n        if (object.hasOwnProperty(key)) {\n            objectCopy[key] = object[key];\n        }\n    }\n\n    return objectCopy;\n}\n\nfunction isExclude(pattern: string): boolean {\n    return pattern[0] === '!';\n}\n\ninterface IGlobTask {\n    pattern: string;\n    opts: any;\n}\n\nexport function multiGlob(patterns: string[], opts?: any): Promise<string[]> {\n    const globTasks: IGlobTask[] = [];\n\n    opts = extendObject({\n        cache: Object.create(null),\n        statCache: Object.create(null),\n        realpathCache: Object.create(null),\n        symlinks: Object.create(null),\n        ignore: []\n    }, opts);\n\n    try {\n        patterns.forEach((pattern, i) => {\n            if (isExclude(pattern)) {\n                return;\n            }\n\n            const ignore = patterns.slice(i).filter(isExclude).map(excludePattern => {\n                return excludePattern.slice(1);\n            });\n\n            globTasks.push({\n                pattern,\n                opts: extendObject(extendObject({}, opts), {\n                    ignore: opts.ignore.concat(ignore)\n                })\n            });\n        });\n    } catch (err) {\n        return Promise.reject(err);\n    }\n\n    return Promise.all(globTasks.map(task => {\n        return new Promise<string[]>((c, e) => {\n            glob(task.pattern, task.opts, (err, files: string[]) => {\n                if (err) {\n                    e(err);\n                } else {\n                    c(files);\n                }\n            });\n        });\n    })).then(results =>  {\n        const set = new Set<string>();\n        for (let paths of results) {\n            for (let p of paths) {\n                set.add(p);\n            }\n        }\n\n        let array = [];\n        set.forEach(v => array.push(fixDriveLetterAndSlashes(v)));\n        return array;\n    });\n}\n\n/**\n * A reversable subclass of the Handles helper\n */\nexport class ReverseHandles<T> extends Handles<T> {\n    private _reverseMap = new Map<T, number>();\n\n    public create(value: T): number {\n        const handle = super.create(value);\n        this._reverseMap.set(value, handle);\n\n        return handle;\n    }\n\n    public lookup(value: T): number {\n        return this._reverseMap.get(value);\n    }\n\n    public lookupF(idFn: (value: T) => boolean): number {\n        for (let key of this._reverseMap.keys()) {\n            if (idFn(key)) return this._reverseMap.get(key);\n        }\n\n        return undefined;\n    }\n\n    public set(handle: number, value: T): void {\n        (<any>this)._handleMap.set(handle, value);\n        this._reverseMap.set(value, handle);\n    }\n}\n\n/**\n * Return a regex for the given path to set a breakpoint on\n */\nexport function pathToRegex(aPath: string, caseSensitive: boolean): string {\n    const fileUrlPrefix = 'file:///';\n    let isFileUrl = aPath.startsWith(fileUrlPrefix);\n    if (isFileUrl) {\n        // Purposely avoiding fileUrlToPath/pathToFileUrl for this, because it does decodeURI/encodeURI\n        // for special URL chars and I don't want to think about that interacting with special regex chars\n        aPath = aPath.substr(fileUrlPrefix.length);\n    }\n\n    aPath = escapeRegexSpecialChars(aPath);\n\n    // If we should resolve paths in a case-sensitive way, we still need to set the BP for either an\n    // upper or lowercased drive letter\n    if (caseSensitive) {\n        if (aPath.match(/^[a-zA-Z]:/)) {\n            const driveLetter = aPath.charAt(0);\n            const u = driveLetter.toUpperCase();\n            const l = driveLetter.toLowerCase();\n            aPath = `[${u}${l}]${aPath.substr(1)}`;\n        }\n    } else {\n        aPath = aPath.replace(/[a-zA-Z]/g, letter => `[${letter.toLowerCase()}${letter.toUpperCase()}]`);\n    }\n\n    if (isFileUrl) {\n        aPath = escapeRegexSpecialChars(fileUrlPrefix) + aPath;\n    }\n\n    return aPath;\n}\n\nexport function pathGlobToBlackboxedRegex(glob: string): string {\n    return escapeRegexSpecialCharsForBlackbox(glob)\n        .replace(/\\*\\*(\\\\\\/|\\\\\\\\)?/g, '(.*\\\\\\/)?') // **/ -> (.*\\/)?\n        .replace(/([^\\.]|^)\\*/g, '$1.*') // * -> .*\n\n        // Just to simplify\n        .replace(/\\.\\*\\\\\\/\\.\\*/g, '.*') // .*\\/.* -> .*\n        .replace(/\\.\\*\\.\\*/g, '.*') // .*.* -> .*\n\n        // Match either slash direction\n        .replace(/\\\\\\/|\\\\\\\\/g, '[\\/\\\\\\\\]'); // / -> [/|\\], \\ -> [/|\\]\n}\n\nfunction escapeRegexSpecialChars(str: string): string {\n    return str.replace(/([/\\\\.?*()^${}|[\\]+])/g, '\\\\$1');\n}\n\n/**\n * Does not escape *, as str is a simple glob pattern\n */\nfunction escapeRegexSpecialCharsForBlackbox(str: string): string {\n    return str.replace(/([/\\\\.?()^${}|[\\]+])/g, '\\\\$1');\n}\n\nexport function trimLastNewline(str: string): string {\n    return str.replace(/(\\n|\\r\\n)$/, '');\n}\n\nexport function prettifyNewlines(str: string): string {\n    return str.replace(/(\\n|\\r\\n)/, '\\\\n');\n}\n\nfunction blackboxNegativeLookaheadPattern(aPath: string): string {\n    return `(?!${escapeRegexSpecialChars(aPath)})`;\n}\n\nexport function makeRegexNotMatchPath(regex: RegExp, aPath: string): RegExp {\n    if (regex.test(aPath)) {\n        const regSourceWithoutCaret = regex.source.replace(/^\\^/, '');\n        const source = `^${blackboxNegativeLookaheadPattern(aPath)}.*${regSourceWithoutCaret}`;\n        return new RegExp(source, 'i');\n    } else {\n        return regex;\n    }\n}\n\nexport function makeRegexMatchPath(regex: RegExp, aPath: string): RegExp {\n    const negativePattern = blackboxNegativeLookaheadPattern(aPath);\n    if (regex.source.indexOf(negativePattern) >= 0) {\n        const newSource = regex.source.replace(negativePattern, '');\n        return new RegExp(newSource, 'i');\n    } else {\n        return regex;\n    }\n}\n\nexport function uppercaseFirstLetter(str: string): string {\n    return str.substr(0, 1).toUpperCase() + str.substr(1);\n}\n\nexport type Partial<T> = {\n    [P in keyof T]?: T[P];\n};\n\nexport function getLine(msg: string, n = 0): string {\n    return msg.split('\\n')[n];\n}\n\nexport function firstLine(msg: string): string {\n    return getLine(msg || '');\n}\n\nexport function isNumber(num: number): boolean {\n    return typeof num === 'number';\n}\n\nexport function escapeRegExpCharacters(value: string): string {\n    return value.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)\\#]/g, '\\\\$&');\n}\n"],"sourceRoot":"../.."}